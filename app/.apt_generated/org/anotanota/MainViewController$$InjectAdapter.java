// Code generated by dagger-compiler.  Do not edit.
package org.anotanota;

import dagger.internal.Binding;
import dagger.internal.Linker;
import java.util.Set;
import javax.inject.Provider;

/**
 * A {@code Binding<MainViewController>} implementation which satisfies
 * Dagger's infrastructure requirements including:
 *
 * Owning the dependency links between {@code MainViewController} and its
 * dependencies.
 *
 * Being a {@code Provider<MainViewController>} and handling creation and
 * preparation of object instances.
 */
public final class MainViewController$$InjectAdapter extends Binding<MainViewController>
    implements Provider<MainViewController> {
  private Binding<android.view.LayoutInflater> inflater;
  private Binding<android.support.v7.app.ActionBar> actionBar;
  private Binding<org.anotanota.framework.Activity> context;
  private Binding<org.anotanota.framework.Navigation> navigation;
  private Binding<org.anotanota.framework.drawer.NavigationDrawerViewController> navDrawer;

  public MainViewController$$InjectAdapter() {
    super("org.anotanota.MainViewController", "members/org.anotanota.MainViewController", NOT_SINGLETON, MainViewController.class);
  }

  /**
   * Used internally to link bindings/providers together at run time
   * according to their dependency graph.
   */
  @Override
  @SuppressWarnings("unchecked")
  public void attach(Linker linker) {
    inflater = (Binding<android.view.LayoutInflater>) linker.requestBinding("android.view.LayoutInflater", MainViewController.class, getClass().getClassLoader());
    actionBar = (Binding<android.support.v7.app.ActionBar>) linker.requestBinding("android.support.v7.app.ActionBar", MainViewController.class, getClass().getClassLoader());
    context = (Binding<org.anotanota.framework.Activity>) linker.requestBinding("org.anotanota.framework.Activity", MainViewController.class, getClass().getClassLoader());
    navigation = (Binding<org.anotanota.framework.Navigation>) linker.requestBinding("org.anotanota.framework.Navigation", MainViewController.class, getClass().getClassLoader());
    navDrawer = (Binding<org.anotanota.framework.drawer.NavigationDrawerViewController>) linker.requestBinding("org.anotanota.framework.drawer.NavigationDrawerViewController", MainViewController.class, getClass().getClassLoader());
  }

  /**
   * Used internally obtain dependency information, such as for cyclical
   * graph detection.
   */
  @Override
  public void getDependencies(Set<Binding<?>> getBindings, Set<Binding<?>> injectMembersBindings) {
    getBindings.add(inflater);
    getBindings.add(actionBar);
    getBindings.add(context);
    getBindings.add(navigation);
    getBindings.add(navDrawer);
  }

  /**
   * Returns the fully provisioned instance satisfying the contract for
   * {@code Provider<MainViewController>}.
   */
  @Override
  public MainViewController get() {
    MainViewController result = new MainViewController(inflater.get(), actionBar.get(), context.get(), navigation.get(), navDrawer.get());
    return result;
  }

}
