// Code generated by dagger-compiler.  Do not edit.
package org.anotanota.framework;

import dagger.internal.BindingsGroup;
import dagger.internal.ModuleAdapter;
import dagger.internal.ProvidesBinding;
import javax.inject.Provider;

/**
 * A manager of modules and provides adapters allowing for proper linking and
 * instance provision of types served by {@code @Provides} methods.
 */
public final class ActivityModule$Dependencies$$ModuleAdapter extends ModuleAdapter<ActivityModule.Dependencies> {
  private static final String[] INJECTS = { };
  private static final Class<?>[] STATIC_INJECTIONS = { };
  private static final Class<?>[] INCLUDES = { };

  public ActivityModule$Dependencies$$ModuleAdapter() {
    super(org.anotanota.framework.ActivityModule.Dependencies.class, INJECTS, STATIC_INJECTIONS, false /*overrides*/, INCLUDES, true /*complete*/, true /*library*/);
  }

  @Override
  public ActivityModule.Dependencies newModule() {
    return new org.anotanota.framework.ActivityModule.Dependencies();
  }

  /**
   * Used internally obtain dependency information, such as for cyclical
   * graph detection.
   */
  @Override
  public void getBindings(BindingsGroup bindings, ActivityModule.Dependencies module) {
    bindings.contributeProvidesBinding("@org.anotanota.framework.drawer.NavigationDrawer$Toggle()/android.support.v4.app.ActionBarDrawerToggle", new GetToggleProvidesAdapter(module));
    bindings.contributeProvidesBinding("@org.anotanota.framework.App$MainViewController()/org.anotanota.framework.UIViewController", new GetMainViewControllerProvidesAdapter(module));
  }

  /**
   * A {@code Binding<android.support.v4.app.ActionBarDrawerToggle>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Being a {@code Provider<android.support.v4.app.ActionBarDrawerToggle>} and handling creation and
   * preparation of object instances.
   */
  public static final class GetToggleProvidesAdapter extends ProvidesBinding<android.support.v4.app.ActionBarDrawerToggle>
      implements Provider<android.support.v4.app.ActionBarDrawerToggle> {
    private final ActivityModule.Dependencies module;

    public GetToggleProvidesAdapter(ActivityModule.Dependencies module) {
      super("@org.anotanota.framework.drawer.NavigationDrawer$Toggle()/android.support.v4.app.ActionBarDrawerToggle", NOT_SINGLETON, "org.anotanota.framework.ActivityModule.Dependencies", "getToggle");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<android.support.v4.app.ActionBarDrawerToggle>}.
     */
    @Override
    public android.support.v4.app.ActionBarDrawerToggle get() {
      return module.getToggle();
    }
  }

  /**
   * A {@code Binding<org.anotanota.framework.UIViewController>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Being a {@code Provider<org.anotanota.framework.UIViewController>} and handling creation and
   * preparation of object instances.
   */
  public static final class GetMainViewControllerProvidesAdapter extends ProvidesBinding<UIViewController>
      implements Provider<UIViewController> {
    private final ActivityModule.Dependencies module;

    public GetMainViewControllerProvidesAdapter(ActivityModule.Dependencies module) {
      super("@org.anotanota.framework.App$MainViewController()/org.anotanota.framework.UIViewController", NOT_SINGLETON, "org.anotanota.framework.ActivityModule.Dependencies", "getMainViewController");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<org.anotanota.framework.UIViewController>}.
     */
    @Override
    public UIViewController get() {
      return module.getMainViewController();
    }
  }
}
